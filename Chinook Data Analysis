
--In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer, employee and order data. 

--List albumn title and artist name and artistID.

SELECT albums.Title, artists.Name, artists.ArtistId
FROM albums
LEFT JOIN artists ON albums.ArtistId = artists.ArtistId
ORDER BY artists.ArtistId;

--List last name and first name of all customers whose country is USA. 

SELECT LastName, FirstName, Country
FROM customers
WHERE Country ='USA';

-- List the customers last name, first name and the support representatives ID and the reps last name who helped the customer.

SELECT customers.LastName, customers.FirstName, customers.SupportRepID, employees.LastName AS support_rep_lastname
FROM customers
LEFT JOIN employees
ON customers.SupportRepID =employees.EmployeeId;

--Show Customers (their full names, customer ID, and country) who are not in the US. 

SELECT FirstName, LastName, CustomerID, Country
FROM customers
WHERE Country <> 'USA';

--Show only the Customers from Brazil.

SELECT FirstName, LastName, Country
FROM customers
WHERE Country = 'Brazil';

--Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT customers.LastName, customers.FirstName, invoices.InvoiceId, invoices.InvoiceDate, invoices.BillingCountry
FROM customers
LEFT JOIN invoices
ON customers.CUstomerId = invoices.CustomerId
WHERE invoices.BillingCountry ='Brazil';

--Show the Employees who are Sales Agents.

SELECT * 
FROM employees
WHERE Title= 'Sales Support Agent';

--Find a unique/distinct list of billing countries from the Invoice table.

SELECT DISTINCT BillingCountry
 FROM chinook.Invoices ;

--Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT emp.LastName, emp.Firstname, inv.InvoiceId
FROM chinook.Employees emp 
JOIN chinook.Customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv ON Inv.CustomerId = cust.CustomerId;

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT emp.LastName, emp.Firstname, cust.FirstName, cust.LastName, cust.Country, inv.total
FROM chinook.employees emp 
JOIN chinook.Customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv ON Inv.CustomerId = cust.CustomerId;

--How many Invoices were there in 2009?

SELECT COUNT(*)
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--What are the total sales for 2009?

SELECT SUM(Total)
FROM chinook.invoices
WHERE InvoiceDate BETWEEN  '2009-01-01' AND '2009-12-31';

--Write a query that includes the purchased track name with each invoice line ID.

SELECT tracks.Name, invoice_items.InvoiceLineId
FROM chinook.invoice_items
JOIN chinook.tracks
ON invoice_items.TrackId = tracks.TrackId;

--Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT ar.name as Artist, t.Name as Track, i.InvoiceLineId
FROM chinook.Invoice_items i
LEFT JOIN chinook.tracks t 
ON i.TrackID=t.TrackID
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.ArtistID=a.ArtistID;

--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT t.Name AS TrackName, a.Title AS AlbumTitle, m.Name AS MediaType, g.Name AS Genre
FROM tracks t
INNER JOIN albums a 
ON t.AlbumId = a.AlbumId
INNER JOIN media_types m 
ON t.MediaTypeId = m.MediaTypeId
INNER JOIN genres g 
ON t.GenreId = g.GenreId;

--Show the total sales made by each sales agent.

SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp

JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId

JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId

WHERE emp.Title = 'Sales Support Agent' 
GROUP BY emp.FirstName;

--Which sales agent made the most dollars in sales in 2009?

SELECT e.FirstName, e.LastName, e.Title, ROUND(SUM(inv.Total), 2) AS TotalSales
FROM employees e
JOIN customers c 
ON c.SupportRepId = e.EmployeeId
JOIN invoices inv 
ON inv.CustomerId = c.CustomerId
WHERE inv.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
AND e.Title = 'Sales Support Agent'
GROUP BY e.FirstName, e.LastName, e.Title
ORDER BY TotalSales DESC
LIMIT 1;
